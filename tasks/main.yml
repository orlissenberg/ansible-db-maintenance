---
# tasks file for db-maintenance

- name: Install dependencies
  apt: name="{{ item }}"
  args:
    state: present
    update_cache: yes
  with_items:
    - python-software-properties
    - python-pip
    - python-dev

- name: Create a timestamp for the backup file names
  shell: echo "$(date '+%Y%m%d_%H%M%S')_"
  register: timestamp

- name: Create temporary directory
  file: path="{{ db_maintenance_backup_path }}" recurse=yes state=directory mode=0777

# PostgreSQL
- name: PostgreSQL backups
  shell: pg_dump {{ item.name }} --format=tar > {{ db_maintenance_backup_path }}/pg_{{ timestamp.stdout }}{{ item.name }}.sql.tar
  with_items: "{{ db_maintenance_postgres_dbs }}"
  become: yes
  become_user: postgres

# Fetch backups
- name: Download PostgreSQL backups
  fetch: src="{{ db_maintenance_backup_path }}/pg_{{ timestamp.stdout }}{{ item.name }}.sql.tar"
  args:
    dest: "{{ db_maintenance_backup_download_path }}"
    flat: yes
  with_items: "{{ db_maintenance_postgres_dbs }}"
  become: yes
  become_user: postgres

# MySQL
- name: Backup MySQL databases
  mysql_db: state=dump name={{ item.name }} target="{{ db_maintenance_backup_path }}/mysql_{{ timestamp.stdout }}{{ item.name }}.sql.gz"
  with_items: "{{ db_maintenance_mysql_dbs }}"

# Fetch backups
- name: Download MySQL databases
  fetch: src="{{ db_maintenance_backup_path }}/mysql_{{ timestamp.stdout }}{{ item.name }}.sql.gz"
  with_items: "{{ db_maintenance_mysql_dbs }}"
  args:
    dest: "{{ db_maintenance_backup_download_path }}"
    flat: yes

- name: Remove temporary directory
  file: path="{{ db_maintenance_backup_path }}" state=absent
